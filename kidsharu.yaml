swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "KidsHaru - 아동 사진 공유 서비스"
  termsOfService: ""
  contact:
    email: "embrapers263@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "fc3i3hiwel.execute-api.ap-northeast-2.amazonaws.com"
basePath: "/develop"


tags:
- name: "auth"
  description: "로그인과 회원가입"
- name: "child"
  description: "원아 추가, 조회, 수정, 삭제"
- name: "album"
  description: "앨범 추가, 조회, 수정, 삭제"
- name: "picture"
  description: "사진 추가, 조회, 수정, 삭제"
- name: "face"
  description: "원아 얼굴 추가, 조회, 수정, 삭제"


paths:

  # auth
  /teachers:
    post:
      tags:
      - "auth"
      summary: "교사 회원가입"
      parameters:
      - $ref: "#/def-req-body/register_teacher"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/TeacherLoginResult"
        400:
          $ref: "#/def-res/BadRequest"
        409:
          $ref: "#/def-res/Conflict"
        500:
          $ref: "#/def-res/InternalServerError"

  /parents:
    post:
      tags:
      - "auth"
      summary: "학부모 회원가입"
      parameters:
      - $ref: "#/def-req-body/register_parent"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/ParentLoginResult"
        400:
          $ref: "#/def-res/BadRequest"
        409:
          $ref: "#/def-res/Conflict"
        500:
          $ref: "#/def-res/InternalServerError"

  /auth:
    post:
      tags:
      - "auth"
      summary: "통합 로그인"
      parameters:
      - $ref: "#/def-req-body/login"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/LoginResult"
        400:
          $ref: "#/def-res/BadRequest"
        404:
          $ref: "#/def-res/NotFound"
        500:
          $ref: "#/def-res/InternalServerError"

  # child
  /teachers/{teacher_id}/children:
    get:
      tags:
      - "child"
      summary: "교사의 원아 정보 리스트"
      parameters:
      - $ref: "#/def-req-path/teacher_id"
      responses:
        200:
          description: "Success"
          schema:
            type: array
            items:
              $ref: "#/definitions/Child"
        400:
          $ref: "#/def-res/BadRequest"
        404:
          $ref: "#/def-res/NotFound"
        500:
          $ref: "#/def-res/InternalServerError"
    post:
      tags:
      - "child"
      summary: "교사에 원아 정보 추가"
      parameters:
      - $ref: "#/def-req-path/teacher_id"
      - $ref: "#/def-req-body/child"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Child"
        400:
          $ref: "#/def-res/BadRequest"
        404:
          $ref: "#/def-res/NotFound"
        409:
          $ref: "#/def-res/Conflict"
        500:
          $ref: "#/def-res/InternalServerError"

  /parents/{parent_id}/children:
    get:
      tags:
      - "child"
      summary: "부모의 아이 정보 리스트"
      parameters:
      - $ref: "#/def-req-path/parent_id"
      responses:
        200:
          description: "Success"
          schema:
            type: array
            items:
              $ref: "#/definitions/Child"
        400:
          $ref: "#/def-res/BadRequest"
        404:
          $ref: "#/def-res/NotFound"
        500:
          $ref: "#/def-res/InternalServerError"

  /children/{child_id}:
    get:
      tags:
      - "child"
      summary: "원아 정보 조회"
      parameters:
      - $ref: "#/def-req-path/child_id"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Child"
        400:
          $ref: "#/def-res/BadRequest"
        404:
          $ref: "#/def-res/NotFound"
        500:
          $ref: "#/def-res/InternalServerError"
    put:
      tags:
      - "child"
      summary: "원아 정보 수정"
      parameters:
      - $ref: "#/def-req-path/child_id"
      - $ref: "#/def-req-body/child"
      responses:
        204:
          description: "Success"
        400:
          $ref: "#/def-res/BadRequest"
        404:
          $ref: "#/def-res/NotFound"
        500:
          $ref: "#/def-res/InternalServerError"
    delete:
      tags:
      - "child"
      summary: "원아 정보 삭제"
      parameters:
      - $ref: "#/def-req-path/child_id"
      responses:
        204:
          description: "Success"
        400:
          $ref: "#/def-res/BadRequest"
        404:
          $ref: "#/def-res/NotFound"
        500:
          $ref: "#/def-res/InternalServerError"

  # album
  /teachers/{teacher_id}/albums:
    get:
      tags:
      - "album"
      summary: "교사의 앨범 정보 리스트"
      parameters:
      - $ref: "#/def-req-path/teacher_id"
      responses:
        200:
          description: "Success"
          schema:
            type: array
            items:
              $ref: "#/definitions/AlbumWithPictureList"
        400:
          $ref: "#/def-res/BadRequest"
        404:
          $ref: "#/def-res/NotFound"
        500:
          $ref: "#/def-res/InternalServerError"
    post:
      tags:
      - "album"
      summary: "교사에 앨범 정보 추가"
      parameters:
      - $ref: "#/def-req-path/teacher_id"
      - $ref: "#/def-req-body/album"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Album"
        400:
          $ref: "#/def-res/BadRequest"
        404:
          $ref: "#/def-res/NotFound"
        500:
          $ref: "#/def-res/InternalServerError"

  /parents/{parent_id}/albums:
    get:
      tags:
      - "album"
      summary: "부모의 앨범 정보 리스트"
      parameters:
      - $ref: "#/def-req-path/parent_id"
      responses:
        200:
          description: "Success"
          schema:
            type: array
            items:
              $ref: "#/definitions/AlbumWithPictureList"
        400:
          $ref: "#/def-res/BadRequest"
        404:
          $ref: "#/def-res/NotFound"
        500:
          $ref: "#/def-res/InternalServerError"

  /albums/{album_id}:
    get:
      tags:
      - "album"
      summary: "앨범 정보 조회"
      parameters:
      - $ref: "#/def-req-path/album_id"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Album"
        400:
          $ref: "#/def-res/BadRequest"
        404:
          $ref: "#/def-res/NotFound"
        500:
          $ref: "#/def-res/InternalServerError"
    put:
      tags:
      - "album"
      summary: "앨범 정보 수정"
      parameters:
      - $ref: "#/def-req-path/album_id"
      - $ref: "#/def-req-body/album_modify"
      responses:
        204:
          description: "Success"
        400:
          $ref: "#/def-res/BadRequest"
        404:
          $ref: "#/def-res/NotFound"
        500:
          $ref: "#/def-res/InternalServerError"
    delete:
      tags:
      - "album"
      summary: "앨범 정보 삭제"
      parameters:
      - $ref: "#/def-req-path/album_id"
      responses:
        204:
          description: "Success"
        400:
          $ref: "#/def-res/BadRequest"
        404:
          $ref: "#/def-res/NotFound"
        500:
          $ref: "#/def-res/InternalServerError"

  /albums/processing:
    get:
      tags:
      - "album"
      summary: "처리 중인 앨범 정보 리스트"
      responses:
        200:
          description: "Success"
          schema:
            type: array
            items:
              $ref: "#/definitions/Album"
        500:
          $ref: "#/def-res/InternalServerError"

  # picture
  /albums/{album_id}/pictures:
    get:
      tags:
      - "picture"
      summary: "앨범의 사진 정보 리스트"
      parameters:
      - $ref: "#/def-req-path/album_id"
      responses:
        200:
          description: "Success"
          schema:
            type: array
            items:
              $ref: "#/definitions/Picture"
        400:
          $ref: "#/def-res/BadRequest"
        404:
          $ref: "#/def-res/NotFound"
        500:
          $ref: "#/def-res/InternalServerError"
    post:
      tags:
      - "picture"
      summary: "앨범에 사진 정보 추가"
      parameters:
      - $ref: "#/def-req-path/album_id"
      - $ref: "#/def-req-body/picture"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Picture"
        400:
          $ref: "#/def-res/BadRequest"
        404:
          $ref: "#/def-res/NotFound"
        500:
          $ref: "#/def-res/InternalServerError"

  /albums/{album_id}/image-upload:
    post:
      tags:
      - "picture"
      summary: "앨범에 사진 업로드"
      parameters:
      - $ref: "#/def-req-path/album_id"
      responses:
        200:
          description: "Success"
          schema:
            type: object
            properties:
              url:
                type: string
                example: "https://s3.ap-northeast-2.amazonaws.com/kidsharu-album/1/000.jpg"

        400:
          $ref: "#/def-res/BadRequest"
        404:
          $ref: "#/def-res/NotFound"
        500:
          $ref: "#/def-res/InternalServerError"

  /albums/{album_id}/pictures/{picture_id}:
    get:
      tags:
      - "picture"
      summary: "사진 정보 조회"
      parameters:
      - $ref: "#/def-req-path/album_id"
      - $ref: "#/def-req-path/picture_id"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Picture"
        400:
          $ref: "#/def-res/BadRequest"
        404:
          $ref: "#/def-res/NotFound"
        500:
          $ref: "#/def-res/InternalServerError"
    put:
      tags:
      - "picture"
      summary: "사진 정보 수정"
      parameters:
      - $ref: "#/def-req-path/album_id"
      - $ref: "#/def-req-path/picture_id"
      - $ref: "#/def-req-body/picture_modify"
      responses:
        204:
          description: "Success"
        400:
          $ref: "#/def-res/BadRequest"
        404:
          $ref: "#/def-res/NotFound"
        500:
          $ref: "#/def-res/InternalServerError"
    delete:
      tags:
      - "picture"
      summary: "사진 정보 삭제"
      parameters:
      - $ref: "#/def-req-path/album_id"
      - $ref: "#/def-req-path/picture_id"
      responses:
        204:
          description: "Success"
        400:
          $ref: "#/def-res/BadRequest"
        404:
          $ref: "#/def-res/NotFound"
        500:
          $ref: "#/def-res/InternalServerError"

  /pictures/processing:
    get:
      tags:
      - "picture"
      summary: "처리 중인 사진 정보 리스트"
      responses:
        200:
          description: "Success"
          schema:
            type: array
            items:
              $ref: "#/definitions/Picture"
        500:
          $ref: "#/def-res/InternalServerError"

  # face
  /albums/{album_id}/pictures/{picture_id}/children:
    get:
      tags:
      - "face"
      summary: "사진의 얼굴 정보 리스트"
      parameters:
      - $ref: "#/def-req-path/album_id"
      - $ref: "#/def-req-path/picture_id"
      responses:
        200:
          description: "Success"
          schema:
            type: array
            items:
              $ref: "#/definitions/Face"
        400:
          $ref: "#/def-res/BadRequest"
        404:
          $ref: "#/def-res/NotFound"
        500:
          $ref: "#/def-res/InternalServerError"
    post:
      tags:
      - "face"
      summary: "사진에 얼굴 정보 추가"
      parameters:
      - $ref: "#/def-req-path/album_id"
      - $ref: "#/def-req-path/picture_id"
      - $ref: "#/def-req-body/face"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Face"
        400:
          $ref: "#/def-res/BadRequest"
        404:
          $ref: "#/def-res/NotFound"
        409:
          $ref: "#/def-res/Conflict"
        500:
          $ref: "#/def-res/InternalServerError"

  /albums/{album_id}/pictures/{picture_id}/children/{child_id}:
    get:
      tags:
      - "face"
      summary: "얼굴 정보 조회"
      parameters:
      - $ref: "#/def-req-path/album_id"
      - $ref: "#/def-req-path/picture_id"
      - $ref: "#/def-req-path/child_id"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Face"
        400:
          $ref: "#/def-res/BadRequest"
        404:
          $ref: "#/def-res/NotFound"
        500:
          $ref: "#/def-res/InternalServerError"
    put:
      tags:
      - "face"
      summary: "얼굴 정보 수정"
      parameters:
      - $ref: "#/def-req-path/album_id"
      - $ref: "#/def-req-path/picture_id"
      - $ref: "#/def-req-path/child_id"
      - $ref: "#/def-req-body/face"
      responses:
        204:
          description: "Success"
        400:
          $ref: "#/def-res/BadRequest"
        404:
          $ref: "#/def-res/NotFound"
        409:
          $ref: "#/def-res/Conflict"
        500:
          $ref: "#/def-res/InternalServerError"
    delete:
      tags:
      - "face"
      summary: "얼굴 정보 삭제"
      parameters:
      - $ref: "#/def-req-path/album_id"
      - $ref: "#/def-req-path/picture_id"
      - $ref: "#/def-req-path/child_id"
      responses:
        204:
          description: "Success"
        400:
          $ref: "#/def-res/BadRequest"
        404:
          $ref: "#/def-res/NotFound"
        500:
          $ref: "#/def-res/InternalServerError"

# def-req-path =====================================================================
def-req-path:
  teacher_id:
    name: "teacher_id"
    in: path
    description: "teacher_id"
    required: true
    type: integer
  parent_id:
    name: "parent_id"
    in: path
    description: "parent_id"
    required: true
    type: integer
  child_id:
    name: "child_id"
    in: "path"
    description: "child_id"
    required: true
    type: integer
  album_id:
    name: "album_id"
    in: "path"
    description: "album_id"
    required: true
    type: integer
  picture_id:
    name: "picture_id"
    in: "path"
    description: "picture_id"
    required: true
    type: string

# def-req-body =====================================================================
def-req-body:
  register_teacher:
    name: "body"
    in: "body"
    required: true
    schema:
      type: object
      properties:
        id:
          $ref: "#/def-property/id"
        password:
          $ref: "#/def-property/password"
        name:
          $ref: "#/def-property/name"
  register_parent:
    name: "body"
    in: "body"
    required: true
    schema:
      type: object
      properties:
        id:
          $ref: "#/def-property/id"
        password:
          $ref: "#/def-property/password"
        invite_code:
          $ref: "#/def-property/invite_code"
  login:
    name: "body"
    in: "body"
    required: true
    schema:
      type: object
      properties:
        id:
          $ref: "#/def-property/id"
        password:
          $ref: "#/def-property/password"
  child:
    in: "body"
    name: "body"
    required: true
    schema:
      type: object
      properties:
        name:
          $ref: "#/def-property/name"
        contact:
          $ref: "#/def-property/contact"
  album:
    name: "body"
    in: "body"
    required: true
    schema:
      type: object
      properties:
        title:
          $ref: "#/def-property/album_title"
        content:
          $ref: "#/def-property/album_content"
  album_modify:
    name: "body"
    in: "body"
    required: true
    schema:
      type: object
      properties:
        title:
          $ref: "#/def-property/album_title"
        content:
          $ref: "#/def-property/album_content"
        status:
          $ref: "#/def-property/album_status"
  picture:
    name: "body"
    in: "body"
    required: true
    schema:
      type: object
      properties:
        file_name:
          $ref: "#/def-property/file_name"
  picture_modify:
    name: "body"
    in: "body"
    required: true
    schema:
      type: object
      properties:
        file_name:
          $ref: "#/def-property/file_name"
        status:
          $ref: "#/def-property/picture_status"
  face:
    name: "body"
    in: "body"
    required: true
    schema:
      type: object
      properties:
        child_id:
          $ref: "#/def-property/child_id"
        rect_x:
          $ref: "#/def-property/rect_x"
        rect_y:
          $ref: "#/def-property/rect_y"
        rect_width:
          $ref: "#/def-property/rect_width"
        rect_height:
          $ref: "#/def-property/rect_height"

# definitions ====================================================================
definitions:
  TeacherLoginResult:
    type: object
    properties:
      access_token:
        $ref: "#/def-property/access_token"
      teacher_id:
        $ref: "#/def-property/teacher_id"
  ParentLoginResult:
    type: object
    properties:
      access_token:
        $ref: "#/def-property/access_token"
      parent_id:
        $ref: "#/def-property/parent_id"
  LoginResult:
    type: object
    properties:
      access_token:
        $ref: "#/def-property/access_token"
      parent_id:
        type: integer
        example: 1 (exist only user is parent)
      teacher_id:
        type: integer
        example: 1 (exist only user is teacher)
      is_teacher:
        $ref: "#/def-property/is_teacher"
  Child:
    type: object
    properties:
      child_id:
        $ref: "#/def-property/child_id"
      name:
        $ref: "#/def-property/name"
      contact:
        $ref: "#/def-property/contact"
      profile_img:
        $ref: "#/def-property/picture_url"
  Album:
    type: object
    properties:
      album_id:
        $ref: "#/def-property/album_id"
      cover_img:
        $ref: "#/def-property/picture_url"
      title:
        $ref: "#/def-property/album_title"
      content:
        $ref: "#/def-property/album_content"
      date:
        $ref: "#/def-property/date"
      status:
        $ref: "#/def-property/album_status"
  AlbumWithPictureList:
    type: object
    properties:
      album_id:
        $ref: "#/def-property/album_id"
      cover_img:
        $ref: "#/def-property/picture_url"
      title:
        $ref: "#/def-property/album_title"
      content:
        $ref: "#/def-property/album_content"
      date:
        $ref: "#/def-property/date"
      status:
        $ref: "#/def-property/album_status"
      pictures:
        type: array
        items:
          $ref: "#/def-property/picture_url"
  Picture:
    type: object
    properties:
      album_id:
        $ref: "#/def-property/album_id"
      picture_id:
        $ref: "#/def-property/picture_id"
      picture_url:
        $ref: "#/def-property/picture_url"
      status:
        $ref: "#/def-property/picture_status"
  Face:
    type: object
    properties:
      album_id:
        $ref: "#/def-property/album_id"
      picture_id:
        $ref: "#/def-property/picture_id"
      child_id:
        $ref: "#/def-property/child_id"
      child_name:
        $ref: "#/def-property/name"
      rect_x:
        $ref: "#/def-property/rect_x"
      rect_y:
        $ref: "#/def-property/rect_y"
      rect_width:
        $ref: "#/def-property/rect_width"
      rect_height:
        $ref: "#/def-property/rect_height"

# def-property ====================================================================
def-property:
  id:
    type: string
    example: "example"
  password:
    type: string
    example: "03AC674216F3E15C761EE1A5E255F067953623C8B388B4459E13F978D7C846F4"
    description: "SHA256 Hashed Password"
  invite_code:
    type: string
    example: "q1w2e3"
  access_token:
    type: string
    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
  teacher_id:
    type: string
    example: 1
  parent_id:
    type: string
    example: 1
  is_teacher:
    type: boolean
    example: true

  child_id:
    type: int
    example: 1
  name:
    type: string
    example: "박철수"
  contact:
    type: string
    example: "010-1234-1234"

  album_id:
    type: int
    example: 1
  album_title:
    type: string
    example: "7월 15일 안전 체험관 견학"
  album_content:
    type: string
    example: "우리 햇님반 어린이들과 안전 체험관 견학을 갔다왔어요~~"
  date:
    type: string
    example: "1970-01-01 00:00:00"
  album_status:
    type: string
    example: "uploading/processing/checking/done"

  picture_id:
    type: int
    example: 1
  picture_url:
    type: string
    example: "https://example.com/asdf.jpg"
  file_name:
    type: string
    example: "1234.jpg"
  picture_status:
    type: string
    example: "processing/checking/done"

  rect_x:
    type: int
    example: 24
    description: "단위: pixel"
  rect_y:
    type: int
    example: 34
    description: "단위: pixel"
  rect_width:
    type: int
    example: 125
    description: "단위: pixel"
  rect_height:
    type: int
    example: 146
    description: "단위: pixel"

# def-res ======================================================================
def-res:
  BadRequest:
    description: "클라이언트에서 보내준 데이터에서 빠진 부분이 있는 경우"
    schema:
      type: object
      properties:
        msg:
          type: string
          example: "There is no [field name]"
  Conflict:
    description: "이미 존재하는 경우"
    schema:
      type: object
      properties:
        msg:
          type: string
          example: "Conflict"
  NotFound:
    description: "존재 하지 않는 경우"
    schema:
      type: object
      properties:
        msg:
          type: string
          example: "Not Found"
  InternalServerError:
    description: "예상치 못한 서버 에러가 발생한 경우"
    schema:
      type: object
      properties:
        msg:
          type: string
          example: "Internal Server Error - ..."
